//magnet 磁力链接
import inet.url;
import bencoding.decoder;
import crypt;

namespace bencoding.magnet;

get = function(strTorrentData){
	var bdecoder = ..bencoding.decoder(strTorrentData);
	var torrentInfo,err =  bdecoder.parse();
	if(!torrentInfo[["info"]]) return null,err;
 
	return 'magnet:?'+ "xt=urn:btih:" 
		+ ..crypt.sha1( bdecoder.getString( torrentInfo[["info"]]) ,true) 
		+ "&" +..inet.url.stringifyParameters({   
			dn = torrentInfo['info']['name'];
			tr = torrentInfo['announce']; 
			xl = torrentInfo['info']['length']
		},false)
}

getName = function(url){
	var tUrl = ..inet.url.split(url);
	if(tUrl ? tUrl.scheme=="magnet"){
		var param = ..inet.url.splitParameters(tUrl.extraInfo,null,null,{"xt"});
		if(param.dn) return param.dn;
		
		for(k,v in param.xt){
			 var m = ..string.match(v,"urn\:btih\:(.+)");
			 return m,true;
		}
		
		for(k,v in param.xt){
			 var m = ..string.match(v,"\w+\:\w+\:(.+)");
			 return m,true;
		}
		
		return "",true;
	} 

	return ..inet.url.getFileName(url);
}

/**intellisense(bencoding.magnet)
get(__/*torrent 数据*/) = torrent 数据为 Bencoding 编码的字符串,\n返回磁力链接
getName(__/*URL*/) = 如果参数 @1 为磁力链则返回文件名或元数据哈希值。\n在磁力链中获取不到文件名且返回哈希值或空串时，第 2 个返回值为 true。\n如果指定的 URL 不是磁力链，则返回 URL 中的文件名。
end intellisense**/
